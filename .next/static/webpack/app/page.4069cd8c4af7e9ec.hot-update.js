/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FFeatures.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FFluxThreeBackground.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FHero.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FNavbar.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FRoadmap.tsx&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FFeatures.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FFluxThreeBackground.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FHero.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FNavbar.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FRoadmap.tsx&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Features.tsx */ \"(app-pages-browser)/./src/components/Features.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/FluxThreeBackground.tsx */ \"(app-pages-browser)/./src/components/FluxThreeBackground.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Hero.tsx */ \"(app-pages-browser)/./src/components/Hero.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Navbar.tsx */ \"(app-pages-browser)/./src/components/Navbar.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Roadmap.tsx */ \"(app-pages-browser)/./src/components/Roadmap.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRjF0bzNmb3I1dmk3YXRlOXglMkZDYXNjYWRlUHJvamVjdHMlMkZuZXVyb24tbGluayUyRnNyYyUyRmNvbXBvbmVudHMlMkZGZWF0dXJlcy50c3gmbW9kdWxlcz0lMkZVc2VycyUyRjF0bzNmb3I1dmk3YXRlOXglMkZDYXNjYWRlUHJvamVjdHMlMkZuZXVyb24tbGluayUyRnNyYyUyRmNvbXBvbmVudHMlMkZGbHV4VGhyZWVCYWNrZ3JvdW5kLnRzeCZtb2R1bGVzPSUyRlVzZXJzJTJGMXRvM2ZvcjV2aTdhdGU5eCUyRkNhc2NhZGVQcm9qZWN0cyUyRm5ldXJvbi1saW5rJTJGc3JjJTJGY29tcG9uZW50cyUyRkhlcm8udHN4Jm1vZHVsZXM9JTJGVXNlcnMlMkYxdG8zZm9yNXZpN2F0ZTl4JTJGQ2FzY2FkZVByb2plY3RzJTJGbmV1cm9uLWxpbmslMkZzcmMlMkZjb21wb25lbnRzJTJGTmF2YmFyLnRzeCZtb2R1bGVzPSUyRlVzZXJzJTJGMXRvM2ZvcjV2aTdhdGU5eCUyRkNhc2NhZGVQcm9qZWN0cyUyRm5ldXJvbi1saW5rJTJGc3JjJTJGY29tcG9uZW50cyUyRlJvYWRtYXAudHN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsb0xBQW9IO0FBQ3BILDBNQUErSDtBQUMvSCw0S0FBZ0g7QUFDaEgsZ0xBQWtIO0FBQ2xIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/Y2YwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy8xdG8zZm9yNXZpN2F0ZTl4L0Nhc2NhZGVQcm9qZWN0cy9uZXVyb24tbGluay9zcmMvY29tcG9uZW50cy9GZWF0dXJlcy50c3hcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy8xdG8zZm9yNXZpN2F0ZTl4L0Nhc2NhZGVQcm9qZWN0cy9uZXVyb24tbGluay9zcmMvY29tcG9uZW50cy9GbHV4VGhyZWVCYWNrZ3JvdW5kLnRzeFwiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzLzF0bzNmb3I1dmk3YXRlOXgvQ2FzY2FkZVByb2plY3RzL25ldXJvbi1saW5rL3NyYy9jb21wb25lbnRzL0hlcm8udHN4XCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvMXRvM2ZvcjV2aTdhdGU5eC9DYXNjYWRlUHJvamVjdHMvbmV1cm9uLWxpbmsvc3JjL2NvbXBvbmVudHMvTmF2YmFyLnRzeFwiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzLzF0bzNmb3I1dmk3YXRlOXgvQ2FzY2FkZVByb2plY3RzL25ldXJvbi1saW5rL3NyYy9jb21wb25lbnRzL1JvYWRtYXAudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FFeatures.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FFluxThreeBackground.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FHero.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FNavbar.tsx&modules=%2FUsers%2F1to3for5vi7ate9x%2FCascadeProjects%2Fneuron-link%2Fsrc%2Fcomponents%2FRoadmap.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/FluxThreeBackground.tsx":
/*!************************************************!*\
  !*** ./src/components/FluxThreeBackground.tsx ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FluxThreeBackground; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_misc_GPUComputationRenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three/examples/jsm/misc/GPUComputationRenderer */ \"(app-pages-browser)/./node_modules/three/examples/jsm/misc/GPUComputationRenderer.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst TEXTURE_WIDTH = 512;\nconst TEXTURE_HEIGHT = 512;\n// Shader for velocity computation\nconst velocityShader = \"\\n  uniform float deltaT;\\n  uniform float flowForce;\\n  uniform vec2 mouse;\\n  uniform bool isMouseDown;\\n  \\n  void main() {\\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\\n    vec2 velocity = texture2D(textureVelocity, uv).xy;\\n    \\n    // Add mouse force\\n    if (isMouseDown) {\\n      vec2 mouseVec = mouse - uv;\\n      float dist = length(mouseVec);\\n      if (dist < 0.1) {\\n        velocity += normalize(mouseVec) * flowForce * (1.0 - dist / 0.1);\\n      }\\n    }\\n    \\n    // Apply some fluid dynamics\\n    velocity += curl(uv) * 0.3;\\n    \\n    // Decay\\n    velocity *= 0.99;\\n    \\n    gl_FragColor = vec4(velocity, 0.0, 1.0);\\n  }\\n\";\n// Shader for particle positions\nconst positionShader = \"\\n  uniform sampler2D textureVelocity;\\n  \\n  void main() {\\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\\n    vec4 pos = texture2D(texturePosition, uv);\\n    vec2 vel = texture2D(textureVelocity, pos.xy).xy;\\n    \\n    // Update position based on velocity\\n    pos.xy += vel * 0.001;\\n    \\n    // Wrap around edges\\n    pos.x = mod(pos.x + 1.0, 1.0);\\n    pos.y = mod(pos.y + 1.0, 1.0);\\n    \\n    gl_FragColor = pos;\\n  }\\n\";\n// Vertex shader for particles\nconst particleVertexShader = \"\\n  attribute vec2 reference;\\n  uniform sampler2D texturePosition;\\n  uniform float pointSize;\\n  \\n  void main() {\\n    vec4 pos = texture2D(texturePosition, reference);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos.xy * 2.0 - 1.0, 0.0, 1.0);\\n    gl_PointSize = pointSize;\\n  }\\n\";\n// Fragment shader for particles\nconst particleFragmentShader = \"\\n  uniform vec3 color;\\n  \\n  void main() {\\n    float r = length(gl_PointCoord - vec2(0.5));\\n    if (r > 0.5) discard;\\n    gl_FragColor = vec4(color, 1.0 - r * 2.0);\\n  }\\n\";\nfunction FluxThreeBackground(param) {\n    let { className, style, particleCount = 100000, particleSize = 2, flowForce = 30, color = [\n        1,\n        0.5,\n        0.2\n    ] } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const rendererRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const mouseRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        x: 0,\n        y: 0,\n        isDown: false\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!containerRef.current) return;\n        // Setup Three.js\n        const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n        const camera = new three__WEBPACK_IMPORTED_MODULE_2__.OrthographicCamera(-1, 1, 1, -1, -1, 1);\n        const renderer = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer({\n            antialias: true,\n            alpha: true\n        });\n        rendererRef.current = renderer;\n        const gpuCompute = new three_examples_jsm_misc_GPUComputationRenderer__WEBPACK_IMPORTED_MODULE_4__.GPUComputationRenderer(TEXTURE_WIDTH, TEXTURE_HEIGHT, renderer);\n        // Initialize textures\n        const positionTexture = gpuCompute.createTexture();\n        const velocityTexture = gpuCompute.createTexture();\n        // Initialize positions randomly\n        const posArray = positionTexture.image.data;\n        for(let i = 0; i < posArray.length; i += 4){\n            posArray[i] = Math.random();\n            posArray[i + 1] = Math.random();\n            posArray[i + 2] = 0;\n            posArray[i + 3] = 1;\n        }\n        // Create computation variables\n        const velocityVariable = gpuCompute.addVariable(\"textureVelocity\", velocityShader, velocityTexture);\n        const positionVariable = gpuCompute.addVariable(\"texturePosition\", positionShader, positionTexture);\n        gpuCompute.setVariableDependencies(velocityVariable, [\n            velocityVariable\n        ]);\n        gpuCompute.setVariableDependencies(positionVariable, [\n            positionVariable,\n            velocityVariable\n        ]);\n        const uniforms = velocityVariable.material.uniforms;\n        uniforms.deltaT = {\n            value: 0.0\n        };\n        uniforms.flowForce = {\n            value: flowForce\n        };\n        uniforms.mouse = {\n            value: new three__WEBPACK_IMPORTED_MODULE_2__.Vector2(0, 0)\n        };\n        uniforms.isMouseDown = {\n            value: false\n        };\n        // Initialize computation\n        gpuCompute.init();\n        // Create particle system\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.BufferGeometry();\n        const references = new Float32Array(particleCount * 2);\n        for(let i = 0; i < particleCount; i++){\n            references[i * 2] = i % TEXTURE_WIDTH / TEXTURE_WIDTH;\n            references[i * 2 + 1] = Math.floor(i / TEXTURE_WIDTH) / TEXTURE_HEIGHT;\n        }\n        geometry.setAttribute(\"reference\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(references, 2));\n        const material = new three__WEBPACK_IMPORTED_MODULE_2__.ShaderMaterial({\n            uniforms: {\n                texturePosition: {\n                    value: null\n                },\n                pointSize: {\n                    value: particleSize\n                },\n                color: {\n                    value: new three__WEBPACK_IMPORTED_MODULE_2__.Color(...color)\n                }\n            },\n            vertexShader: particleVertexShader,\n            fragmentShader: particleFragmentShader,\n            transparent: true\n        });\n        const particles = new three__WEBPACK_IMPORTED_MODULE_2__.Points(geometry, material);\n        scene.add(particles);\n        // Handle resize\n        const handleResize = ()=>{\n            if (!containerRef.current) return;\n            const width = containerRef.current.clientWidth;\n            const height = containerRef.current.clientHeight;\n            renderer.setSize(width, height);\n        };\n        // Handle mouse events\n        const handleMouseMove = (event)=>{\n            if (!containerRef.current) return;\n            const rect = containerRef.current.getBoundingClientRect();\n            mouseRef.current.x = (event.clientX - rect.left) / rect.width;\n            mouseRef.current.y = 1 - (event.clientY - rect.top) / rect.height;\n        };\n        const handleMouseDown = ()=>{\n            mouseRef.current.isDown = true;\n        };\n        const handleMouseUp = ()=>{\n            mouseRef.current.isDown = false;\n        };\n        // Animation loop\n        let animationFrameId;\n        const animate = ()=>{\n            uniforms.deltaT.value = 0.016;\n            uniforms.mouse.value.set(mouseRef.current.x, mouseRef.current.y);\n            uniforms.isMouseDown.value = mouseRef.current.isDown;\n            gpuCompute.compute();\n            material.uniforms.texturePosition.value = gpuCompute.getCurrentRenderTarget(positionVariable).texture;\n            renderer.render(scene, camera);\n            animationFrameId = requestAnimationFrame(animate);\n        };\n        // Setup\n        containerRef.current.appendChild(renderer.domElement);\n        handleResize();\n        window.addEventListener(\"resize\", handleResize);\n        containerRef.current.addEventListener(\"mousemove\", handleMouseMove);\n        containerRef.current.addEventListener(\"mousedown\", handleMouseDown);\n        window.addEventListener(\"mouseup\", handleMouseUp);\n        animate();\n        // Cleanup\n        return ()=>{\n            var _containerRef_current, _containerRef_current1;\n            window.removeEventListener(\"resize\", handleResize);\n            (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.removeEventListener(\"mousemove\", handleMouseMove);\n            (_containerRef_current1 = containerRef.current) === null || _containerRef_current1 === void 0 ? void 0 : _containerRef_current1.removeEventListener(\"mousedown\", handleMouseDown);\n            window.removeEventListener(\"mouseup\", handleMouseUp);\n            cancelAnimationFrame(animationFrameId);\n            renderer.dispose();\n            scene.remove(particles);\n            geometry.dispose();\n            material.dispose();\n        };\n    }, [\n        particleCount,\n        particleSize,\n        flowForce,\n        color\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: className,\n        style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            ...style\n        }\n    }, void 0, false, {\n        fileName: \"/Users/1to3for5vi7ate9x/CascadeProjects/neuron-link/src/components/FluxThreeBackground.tsx\",\n        lineNumber: 240,\n        columnNumber: 5\n    }, this);\n}\n_s(FluxThreeBackground, \"wdyW+OlxfElYeHyI9jeA3p9dfK4=\");\n_c = FluxThreeBackground;\nvar _c;\n$RefreshReg$(_c, \"FluxThreeBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/FluxThreeBackground.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/three/examples/jsm/misc/GPUComputationRenderer.js":
/*!************************************************************************!*\
  !*** ./node_modules/three/examples/jsm/misc/GPUComputationRenderer.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GPUComputationRenderer: function() { return /* binding */ GPUComputationRenderer; }\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var _postprocessing_Pass_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../postprocessing/Pass.js */ \"(app-pages-browser)/./node_modules/three/examples/jsm/postprocessing/Pass.js\");\n\n\n\n\n/**\n * GPUComputationRenderer, based on SimulationRenderer by zz85\n *\n * The GPUComputationRenderer uses the concept of variables. These variables are RGBA float textures that hold 4 floats\n * for each compute element (texel)\n *\n * Each variable has a fragment shader that defines the computation made to obtain the variable in question.\n * You can use as many variables you need, and make dependencies so you can use textures of other variables in the shader\n * (the sampler uniforms are added automatically) Most of the variables will need themselves as dependency.\n *\n * The renderer has actually two render targets per variable, to make ping-pong. Textures from the current frame are used\n * as inputs to render the textures of the next frame.\n *\n * The render targets of the variables can be used as input textures for your visualization shaders.\n *\n * Variable names should be valid identifiers and should not collide with THREE GLSL used identifiers.\n * a common approach could be to use 'texture' prefixing the variable name; i.e texturePosition, textureVelocity...\n *\n * The size of the computation (sizeX * sizeY) is defined as 'resolution' automatically in the shader. For example:\n * #DEFINE resolution vec2( 1024.0, 1024.0 )\n *\n * -------------\n *\n * Basic use:\n *\n * // Initialization...\n *\n * // Create computation renderer\n * const gpuCompute = new GPUComputationRenderer( 1024, 1024, renderer );\n *\n * // Create initial state float textures\n * const pos0 = gpuCompute.createTexture();\n * const vel0 = gpuCompute.createTexture();\n * // and fill in here the texture data...\n *\n * // Add texture variables\n * const velVar = gpuCompute.addVariable( \"textureVelocity\", fragmentShaderVel, vel0 );\n * const posVar = gpuCompute.addVariable( \"texturePosition\", fragmentShaderPos, pos0 );\n *\n * // Add variable dependencies\n * gpuCompute.setVariableDependencies( velVar, [ velVar, posVar ] );\n * gpuCompute.setVariableDependencies( posVar, [ velVar, posVar ] );\n *\n * // Add custom uniforms\n * velVar.material.uniforms.time = { value: 0.0 };\n *\n * // Check for completeness\n * const error = gpuCompute.init();\n * if ( error !== null ) {\n *\t\tconsole.error( error );\n  * }\n *\n *\n * // In each frame...\n *\n * // Compute!\n * gpuCompute.compute();\n *\n * // Update texture uniforms in your visualization materials with the gpu renderer output\n * myMaterial.uniforms.myTexture.value = gpuCompute.getCurrentRenderTarget( posVar ).texture;\n *\n * // Do your rendering\n * renderer.render( myScene, myCamera );\n *\n * -------------\n *\n * Also, you can use utility functions to create ShaderMaterial and perform computations (rendering between textures)\n * Note that the shaders can have multiple input textures.\n *\n * const myFilter1 = gpuCompute.createShaderMaterial( myFilterFragmentShader1, { theTexture: { value: null } } );\n * const myFilter2 = gpuCompute.createShaderMaterial( myFilterFragmentShader2, { theTexture: { value: null } } );\n *\n * const inputTexture = gpuCompute.createTexture();\n *\n * // Fill in here inputTexture...\n *\n * myFilter1.uniforms.theTexture.value = inputTexture;\n *\n * const myRenderTarget = gpuCompute.createRenderTarget();\n * myFilter2.uniforms.theTexture.value = myRenderTarget.texture;\n *\n * const outputRenderTarget = gpuCompute.createRenderTarget();\n *\n * // Now use the output texture where you want:\n * myMaterial.uniforms.map.value = outputRenderTarget.texture;\n *\n * // And compute each frame, before rendering to screen:\n * gpuCompute.doRenderTarget( myFilter1, myRenderTarget );\n * gpuCompute.doRenderTarget( myFilter2, outputRenderTarget );\n *\n *\n *\n * @param {int} sizeX Computation problem size is always 2d: sizeX * sizeY elements.\n * @param {int} sizeY Computation problem size is always 2d: sizeX * sizeY elements.\n * @param {WebGLRenderer} renderer The renderer\n  */\n\nclass GPUComputationRenderer {\n\n\tconstructor( sizeX, sizeY, renderer ) {\n\n\t\tthis.variables = [];\n\n\t\tthis.currentTextureIndex = 0;\n\n\t\tlet dataType = three__WEBPACK_IMPORTED_MODULE_0__.FloatType;\n\n\t\tconst passThruUniforms = {\n\t\t\tpassThruTexture: { value: null }\n\t\t};\n\n\t\tconst passThruShader = createShaderMaterial( getPassThroughFragmentShader(), passThruUniforms );\n\n\t\tconst quad = new _postprocessing_Pass_js__WEBPACK_IMPORTED_MODULE_1__.FullScreenQuad( passThruShader );\n\n\t\tthis.setDataType = function ( type ) {\n\n\t\t\tdataType = type;\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addVariable = function ( variableName, computeFragmentShader, initialValueTexture ) {\n\n\t\t\tconst material = this.createShaderMaterial( computeFragmentShader );\n\n\t\t\tconst variable = {\n\t\t\t\tname: variableName,\n\t\t\t\tinitialValueTexture: initialValueTexture,\n\t\t\t\tmaterial: material,\n\t\t\t\tdependencies: null,\n\t\t\t\trenderTargets: [],\n\t\t\t\twrapS: null,\n\t\t\t\twrapT: null,\n\t\t\t\tminFilter: three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,\n\t\t\t\tmagFilter: three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter\n\t\t\t};\n\n\t\t\tthis.variables.push( variable );\n\n\t\t\treturn variable;\n\n\t\t};\n\n\t\tthis.setVariableDependencies = function ( variable, dependencies ) {\n\n\t\t\tvariable.dependencies = dependencies;\n\n\t\t};\n\n\t\tthis.init = function () {\n\n\t\t\tif ( renderer.capabilities.maxVertexTextures === 0 ) {\n\n\t\t\t\treturn 'No support for vertex shader textures.';\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < this.variables.length; i ++ ) {\n\n\t\t\t\tconst variable = this.variables[ i ];\n\n\t\t\t\t// Creates rendertargets and initialize them with input texture\n\t\t\t\tvariable.renderTargets[ 0 ] = this.createRenderTarget( sizeX, sizeY, variable.wrapS, variable.wrapT, variable.minFilter, variable.magFilter );\n\t\t\t\tvariable.renderTargets[ 1 ] = this.createRenderTarget( sizeX, sizeY, variable.wrapS, variable.wrapT, variable.minFilter, variable.magFilter );\n\t\t\t\tthis.renderTexture( variable.initialValueTexture, variable.renderTargets[ 0 ] );\n\t\t\t\tthis.renderTexture( variable.initialValueTexture, variable.renderTargets[ 1 ] );\n\n\t\t\t\t// Adds dependencies uniforms to the ShaderMaterial\n\t\t\t\tconst material = variable.material;\n\t\t\t\tconst uniforms = material.uniforms;\n\n\t\t\t\tif ( variable.dependencies !== null ) {\n\n\t\t\t\t\tfor ( let d = 0; d < variable.dependencies.length; d ++ ) {\n\n\t\t\t\t\t\tconst depVar = variable.dependencies[ d ];\n\n\t\t\t\t\t\tif ( depVar.name !== variable.name ) {\n\n\t\t\t\t\t\t\t// Checks if variable exists\n\t\t\t\t\t\t\tlet found = false;\n\n\t\t\t\t\t\t\tfor ( let j = 0; j < this.variables.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tif ( depVar.name === this.variables[ j ].name ) {\n\n\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( ! found ) {\n\n\t\t\t\t\t\t\t\treturn 'Variable dependency not found. Variable=' + variable.name + ', dependency=' + depVar.name;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tuniforms[ depVar.name ] = { value: null };\n\n\t\t\t\t\t\tmaterial.fragmentShader = '\\nuniform sampler2D ' + depVar.name + ';\\n' + material.fragmentShader;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.currentTextureIndex = 0;\n\n\t\t\treturn null;\n\n\t\t};\n\n\t\tthis.compute = function () {\n\n\t\t\tconst currentTextureIndex = this.currentTextureIndex;\n\t\t\tconst nextTextureIndex = this.currentTextureIndex === 0 ? 1 : 0;\n\n\t\t\tfor ( let i = 0, il = this.variables.length; i < il; i ++ ) {\n\n\t\t\t\tconst variable = this.variables[ i ];\n\n\t\t\t\t// Sets texture dependencies uniforms\n\t\t\t\tif ( variable.dependencies !== null ) {\n\n\t\t\t\t\tconst uniforms = variable.material.uniforms;\n\n\t\t\t\t\tfor ( let d = 0, dl = variable.dependencies.length; d < dl; d ++ ) {\n\n\t\t\t\t\t\tconst depVar = variable.dependencies[ d ];\n\n\t\t\t\t\t\tuniforms[ depVar.name ].value = depVar.renderTargets[ currentTextureIndex ].texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Performs the computation for this variable\n\t\t\t\tthis.doRenderTarget( variable.material, variable.renderTargets[ nextTextureIndex ] );\n\n\t\t\t}\n\n\t\t\tthis.currentTextureIndex = nextTextureIndex;\n\n\t\t};\n\n\t\tthis.getCurrentRenderTarget = function ( variable ) {\n\n\t\t\treturn variable.renderTargets[ this.currentTextureIndex ];\n\n\t\t};\n\n\t\tthis.getAlternateRenderTarget = function ( variable ) {\n\n\t\t\treturn variable.renderTargets[ this.currentTextureIndex === 0 ? 1 : 0 ];\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tquad.dispose();\n\n\t\t\tconst variables = this.variables;\n\n\t\t\tfor ( let i = 0; i < variables.length; i ++ ) {\n\n\t\t\t\tconst variable = variables[ i ];\n\n\t\t\t\tif ( variable.initialValueTexture ) variable.initialValueTexture.dispose();\n\n\t\t\t\tconst renderTargets = variable.renderTargets;\n\n\t\t\t\tfor ( let j = 0; j < renderTargets.length; j ++ ) {\n\n\t\t\t\t\tconst renderTarget = renderTargets[ j ];\n\t\t\t\t\trenderTarget.dispose();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction addResolutionDefine( materialShader ) {\n\n\t\t\tmaterialShader.defines.resolution = 'vec2( ' + sizeX.toFixed( 1 ) + ', ' + sizeY.toFixed( 1 ) + ' )';\n\n\t\t}\n\n\t\tthis.addResolutionDefine = addResolutionDefine;\n\n\n\t\t// The following functions can be used to compute things manually\n\n\t\tfunction createShaderMaterial( computeFragmentShader, uniforms ) {\n\n\t\t\tuniforms = uniforms || {};\n\n\t\t\tconst material = new three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial( {\n\t\t\t\tname: 'GPUComputationShader',\n\t\t\t\tuniforms: uniforms,\n\t\t\t\tvertexShader: getPassThroughVertexShader(),\n\t\t\t\tfragmentShader: computeFragmentShader\n\t\t\t} );\n\n\t\t\taddResolutionDefine( material );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tthis.createShaderMaterial = createShaderMaterial;\n\n\t\tthis.createRenderTarget = function ( sizeXTexture, sizeYTexture, wrapS, wrapT, minFilter, magFilter ) {\n\n\t\t\tsizeXTexture = sizeXTexture || sizeX;\n\t\t\tsizeYTexture = sizeYTexture || sizeY;\n\n\t\t\twrapS = wrapS || three__WEBPACK_IMPORTED_MODULE_0__.ClampToEdgeWrapping;\n\t\t\twrapT = wrapT || three__WEBPACK_IMPORTED_MODULE_0__.ClampToEdgeWrapping;\n\n\t\t\tminFilter = minFilter || three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter;\n\t\t\tmagFilter = magFilter || three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter;\n\n\t\t\tconst renderTarget = new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget( sizeXTexture, sizeYTexture, {\n\t\t\t\twrapS: wrapS,\n\t\t\t\twrapT: wrapT,\n\t\t\t\tminFilter: minFilter,\n\t\t\t\tmagFilter: magFilter,\n\t\t\t\tformat: three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,\n\t\t\t\ttype: dataType,\n\t\t\t\tdepthBuffer: false\n\t\t\t} );\n\n\t\t\treturn renderTarget;\n\n\t\t};\n\n\t\tthis.createTexture = function () {\n\n\t\t\tconst data = new Float32Array( sizeX * sizeY * 4 );\n\t\t\tconst texture = new three__WEBPACK_IMPORTED_MODULE_0__.DataTexture( data, sizeX, sizeY, three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat, three__WEBPACK_IMPORTED_MODULE_0__.FloatType );\n\t\t\ttexture.needsUpdate = true;\n\t\t\treturn texture;\n\n\t\t};\n\n\t\tthis.renderTexture = function ( input, output ) {\n\n\t\t\t// Takes a texture, and render out in rendertarget\n\t\t\t// input = Texture\n\t\t\t// output = RenderTarget\n\n\t\t\tpassThruUniforms.passThruTexture.value = input;\n\n\t\t\tthis.doRenderTarget( passThruShader, output );\n\n\t\t\tpassThruUniforms.passThruTexture.value = null;\n\n\t\t};\n\n\t\tthis.doRenderTarget = function ( material, output ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n\n\t\t\trenderer.xr.enabled = false; // Avoid camera modification\n\t\t\trenderer.shadowMap.autoUpdate = false; // Avoid re-computing shadows\n\t\t\tquad.material = material;\n\t\t\trenderer.setRenderTarget( output );\n\t\t\tquad.render( renderer );\n\t\t\tquad.material = passThruShader;\n\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t\trenderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t\t// Shaders\n\n\t\tfunction getPassThroughVertexShader() {\n\n\t\t\treturn\t'void main()\t{\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'\tgl_Position = vec4( position, 1.0 );\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'}\\n';\n\n\t\t}\n\n\t\tfunction getPassThroughFragmentShader() {\n\n\t\t\treturn\t'uniform sampler2D passThruTexture;\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'void main() {\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'\tvec2 uv = gl_FragCoord.xy / resolution.xy;\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'\tgl_FragColor = texture2D( passThruTexture, uv );\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'}\\n';\n\n\t\t}\n\n\t}\n\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/three/examples/jsm/misc/GPUComputationRenderer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/three/examples/jsm/postprocessing/Pass.js":
/*!****************************************************************!*\
  !*** ./node_modules/three/examples/jsm/postprocessing/Pass.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FullScreenQuad: function() { return /* binding */ FullScreenQuad; },\n/* harmony export */   Pass: function() { return /* binding */ Pass; }\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n\n\nclass Pass {\n\n\tconstructor() {\n\n\t\tthis.isPass = true;\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n\tdispose() {}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new three__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass FullscreenTriangleGeometry extends three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.setAttribute( 'position', new three__WEBPACK_IMPORTED_MODULE_0__.Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\t\tthis.setAttribute( 'uv', new three__WEBPACK_IMPORTED_MODULE_0__.Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\n\t}\n\n}\n\nconst _geometry = new FullscreenTriangleGeometry();\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aHJlZS9leGFtcGxlcy9qc20vcG9zdHByb2Nlc3NpbmcvUGFzcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFLZTs7QUFFZjs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLG9CQUFvQixxREFBa0I7O0FBRXRDOztBQUVBLHlDQUF5QyxpREFBYzs7QUFFdkQ7O0FBRUE7O0FBRUEscUNBQXFDLHlEQUFzQjtBQUMzRCwrQkFBK0IseURBQXNCOztBQUVyRDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxtQkFBbUIsdUNBQUk7O0FBRXZCOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhyZWUvZXhhbXBsZXMvanNtL3Bvc3Rwcm9jZXNzaW5nL1Bhc3MuanM/OTA2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRCdWZmZXJHZW9tZXRyeSxcblx0RmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSxcblx0T3J0aG9ncmFwaGljQ2FtZXJhLFxuXHRNZXNoXG59IGZyb20gJ3RocmVlJztcblxuY2xhc3MgUGFzcyB7XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cblx0XHR0aGlzLmlzUGFzcyA9IHRydWU7XG5cblx0XHQvLyBpZiBzZXQgdG8gdHJ1ZSwgdGhlIHBhc3MgaXMgcHJvY2Vzc2VkIGJ5IHRoZSBjb21wb3NlclxuXHRcdHRoaXMuZW5hYmxlZCA9IHRydWU7XG5cblx0XHQvLyBpZiBzZXQgdG8gdHJ1ZSwgdGhlIHBhc3MgaW5kaWNhdGVzIHRvIHN3YXAgcmVhZCBhbmQgd3JpdGUgYnVmZmVyIGFmdGVyIHJlbmRlcmluZ1xuXHRcdHRoaXMubmVlZHNTd2FwID0gdHJ1ZTtcblxuXHRcdC8vIGlmIHNldCB0byB0cnVlLCB0aGUgcGFzcyBjbGVhcnMgaXRzIGJ1ZmZlciBiZWZvcmUgcmVuZGVyaW5nXG5cdFx0dGhpcy5jbGVhciA9IGZhbHNlO1xuXG5cdFx0Ly8gaWYgc2V0IHRvIHRydWUsIHRoZSByZXN1bHQgb2YgdGhlIHBhc3MgaXMgcmVuZGVyZWQgdG8gc2NyZWVuLiBUaGlzIGlzIHNldCBhdXRvbWF0aWNhbGx5IGJ5IEVmZmVjdENvbXBvc2VyLlxuXHRcdHRoaXMucmVuZGVyVG9TY3JlZW4gPSBmYWxzZTtcblxuXHR9XG5cblx0c2V0U2l6ZSggLyogd2lkdGgsIGhlaWdodCAqLyApIHt9XG5cblx0cmVuZGVyKCAvKiByZW5kZXJlciwgd3JpdGVCdWZmZXIsIHJlYWRCdWZmZXIsIGRlbHRhVGltZSwgbWFza0FjdGl2ZSAqLyApIHtcblxuXHRcdGNvbnNvbGUuZXJyb3IoICdUSFJFRS5QYXNzOiAucmVuZGVyKCkgbXVzdCBiZSBpbXBsZW1lbnRlZCBpbiBkZXJpdmVkIHBhc3MuJyApO1xuXG5cdH1cblxuXHRkaXNwb3NlKCkge31cblxufVxuXG4vLyBIZWxwZXIgZm9yIHBhc3NlcyB0aGF0IG5lZWQgdG8gZmlsbCB0aGUgdmlld3BvcnQgd2l0aCBhIHNpbmdsZSBxdWFkLlxuXG5jb25zdCBfY2FtZXJhID0gbmV3IE9ydGhvZ3JhcGhpY0NhbWVyYSggLSAxLCAxLCAxLCAtIDEsIDAsIDEgKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL21yZG9vYi90aHJlZS5qcy9wdWxsLzIxMzU4XG5cbmNsYXNzIEZ1bGxzY3JlZW5UcmlhbmdsZUdlb21ldHJ5IGV4dGVuZHMgQnVmZmVyR2VvbWV0cnkge1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXG5cdFx0c3VwZXIoKTtcblxuXHRcdHRoaXMuc2V0QXR0cmlidXRlKCAncG9zaXRpb24nLCBuZXcgRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSggWyAtIDEsIDMsIDAsIC0gMSwgLSAxLCAwLCAzLCAtIDEsIDAgXSwgMyApICk7XG5cdFx0dGhpcy5zZXRBdHRyaWJ1dGUoICd1dicsIG5ldyBGbG9hdDMyQnVmZmVyQXR0cmlidXRlKCBbIDAsIDIsIDAsIDAsIDIsIDAgXSwgMiApICk7XG5cblx0fVxuXG59XG5cbmNvbnN0IF9nZW9tZXRyeSA9IG5ldyBGdWxsc2NyZWVuVHJpYW5nbGVHZW9tZXRyeSgpO1xuXG5jbGFzcyBGdWxsU2NyZWVuUXVhZCB7XG5cblx0Y29uc3RydWN0b3IoIG1hdGVyaWFsICkge1xuXG5cdFx0dGhpcy5fbWVzaCA9IG5ldyBNZXNoKCBfZ2VvbWV0cnksIG1hdGVyaWFsICk7XG5cblx0fVxuXG5cdGRpc3Bvc2UoKSB7XG5cblx0XHR0aGlzLl9tZXNoLmdlb21ldHJ5LmRpc3Bvc2UoKTtcblxuXHR9XG5cblx0cmVuZGVyKCByZW5kZXJlciApIHtcblxuXHRcdHJlbmRlcmVyLnJlbmRlciggdGhpcy5fbWVzaCwgX2NhbWVyYSApO1xuXG5cdH1cblxuXHRnZXQgbWF0ZXJpYWwoKSB7XG5cblx0XHRyZXR1cm4gdGhpcy5fbWVzaC5tYXRlcmlhbDtcblxuXHR9XG5cblx0c2V0IG1hdGVyaWFsKCB2YWx1ZSApIHtcblxuXHRcdHRoaXMuX21lc2gubWF0ZXJpYWwgPSB2YWx1ZTtcblxuXHR9XG5cbn1cblxuZXhwb3J0IHsgUGFzcywgRnVsbFNjcmVlblF1YWQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/three/examples/jsm/postprocessing/Pass.js\n"));

/***/ })

});